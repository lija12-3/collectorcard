service: cardinal-payment-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: ${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET}
    ENCRYPTION_KEY: ${env:ENCRYPTION_KEY}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    AWS_REGION: ${self:provider.region}
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    STRIPE_PUBLISHABLE_KEY: ${env:STRIPE_PUBLISHABLE_KEY}
    STRIPE_WEBHOOK_SECRET: ${env:STRIPE_WEBHOOK_SECRET}
    PAYMENT_NOTIFICATION_QUEUE_URL: ${env:PAYMENT_NOTIFICATION_QUEUE_URL}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - kms:Decrypt
            - secretsmanager:GetSecretValue
          Resource: '*'

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  paymentService:
    handler: dist/main.lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
      - http:
          path: /
          method: ANY
          cors: true

custom:
  serverless-offline:
    httpPort: 3002
    host: 0.0.0.0

package:
  patterns:
    - '!src/**'
    - '!test/**'
    - '!*.md'
    - '!*.yml'
    - '!*.yaml'
