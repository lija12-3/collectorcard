AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Backend CI/CD pipeline for the Card Collectors project.
  Uses shared artifact bucket from the Shared Services account.
  Runs CodePipeline and CodeBuild for backend app automation.

# ---------------------------
# PARAMETERS
# ---------------------------
Parameters:
  GitHubConnectionArn:
    Type: String
    Description: ARN of an existing AWS CodeStar Connections connection for GitHub.
  RepoOwner:
    Type: String
    Default: lija12-3
    Description: GitHub repository owner (user or organization).
  RepoName:
    Type: String
    Default: collectorcard
    Description: GitHub repository name.
  MainBranch:
    Type: String
    Default: main
    Description: Main (production) branch name.
  FeatureBranch:
    Type: String
    Default: feat/CDEV-134_codepipeline
    Description: Feature branch name for testing CodePipeline setup.
  SharedArtifactBucket:
    Type: String
    Description: Artifact bucket name exported from Shared Services stack.

# ---------------------------
# RESOURCES
# ---------------------------
Resources:

  # -------------------------------------
  # IAM Role for CodePipeline
  # -------------------------------------
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: collectorcard-backend-pipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
      Policies:
        - PolicyName: PipelineCustomPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: '*'

  # -------------------------------------
  # IAM Role for CodeBuild
  # -------------------------------------
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: collectorcard-backend-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: CodeBuildCustom
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - eks:DescribeCluster
                  - ecr:GetAuthorizationToken
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource: '*'

  # -------------------------------------
  # CodeBuild Project (Build + Deploy Logic)
  # -------------------------------------
  BackendBuildAndDeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: collectorcard-backend-build-deploy
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: NODE_ENV
            Value: test
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 20
              commands:
                - echo "Installing dependencies..."
                - cd backend
                - npm ci
            pre_build:
              commands:
                - echo "Detecting branch..."
                - REF="${CODEBUILD_WEBHOOK_HEAD_REF:-$CODEBUILD_SOURCE_VERSION}"
                - BRANCH=$(echo $REF | sed 's|refs/heads/||')
                - echo "Branch detected: $BRANCH"
                - export BRANCH
            build:
              commands:
                - echo "Running lint, build, and tests..."
                - npm run lint
                - npm run type-check
                - npm run build:api
                - npm run build:lambdas
                - npm run test --if-present
                - echo "CI completed successfully for branch: $BRANCH"
            post_build:
              commands:
                - echo "Running deployment logic..."
                - |
                  if [[ "$BRANCH" == "main" ]]; then
                    echo "Deploying to PRODUCTION..."
                    # Add production deploy commands here
                  elif [[ "$BRANCH" == "feat/CDEV-134_codepipeline" ]]; then
                    echo "Feature branch CI build only â€” skipping deploy."
                  else
                    echo "Unknown branch, skipping deploy."
          artifacts:
            files:
              - backend/dist/**/*
              - backend/apps/api/dist/**/*
            discard-paths: no

  # -------------------------------------
  # CodePipeline Definition
  # -------------------------------------
  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref SharedArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${RepoOwner}/${RepoName}"
                BranchName: !Ref FeatureBranch
        - Name: BuildAndDeploy
          Actions:
            - Name: BuildAndDeployAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref BackendBuildAndDeployProject

# ---------------------------
# OUTPUTS
# ---------------------------
Outputs:
  BackendPipelineName:
    Description: Name of the backend CI/CD pipeline
    Value: !Ref BackendPipeline
  CodeBuildProjectName:
    Description: Backend CodeBuild project name
    Value: !Ref BackendBuildAndDeployProject

