AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Reusable CloudFormation template for Card Collector project.
  Can deploy either Shared Services (artifact bucket) or Development (pipeline + build)
  based on the EnvironmentType parameter.

Parameters:
  EnvironmentType:
    Type: String
    AllowedValues:
      - Shared
      - Development
    Description: Specify whether this is a Shared or Development stack.

  SharedAccountId:
    Type: String
    Description: AWS Account ID for Shared Services (artifact bucket).

  DevAccountId:
    Type: String
    Description: AWS Account ID for Development account (pipeline + builds).

  RepoOwner:
    Type: String
    Default: lija12-3
    Description: GitHub repository owner/org.

  RepoName:
    Type: String
    Default: collectorcard
    Description: GitHub repository name (use just the repo name, not path).

  GitHubConnectionArn:
    Type: String
    Default: ""
    Description: ARN for CodeStar GitHub connection.

  SharedArtifactBucketName:
    Type: String
    Default: ""
    Description: Shared artifact S3 bucket name.

  MainBranch:
    Type: String
    Default: main

  StagingBranch:
    Type: String
    Default: staging

  DevelopBranch:
    Type: String
    Default: develop

  FeatureBranch:
    Type: String
    Default: feat/CDEV-134_codepipeline

  Region:
    Type: String
    Default: us-east-1

  EKSClusterName:
    Type: String
    Default: ""
    Description: Name of the existing EKS Fargate cluster.

  EKSDeployRoleArn:
    Type: String
    Default: ""
    Description: ARN of the IAM role to assume for EKS deployment (optional).

Conditions:
  IsShared: !Equals [!Ref EnvironmentType, "Shared"]
  IsDevelopment: !Equals [!Ref EnvironmentType, "Development"]
  HasEKSDeployRoleArn: !Not [!Equals [!Ref EKSDeployRoleArn, ""]]

Resources:
  #########################################
  # SHARED SERVICES RESOURCES
  #########################################
  SharedArtifactBucket:
    Condition: IsShared
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "shared-artifacts-card-collector-${Region}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SharedArtifactBucketPolicy:
    Condition: IsShared
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SharedArtifactBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowDevAccountAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${DevAccountId}:root"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${SharedArtifactBucket}"
              - !Sub "arn:aws:s3:::${SharedArtifactBucket}/*"

  #########################################
  # DEVELOPMENT ACCOUNT RESOURCES
  #########################################
  PipelineRole:
    Condition: IsDevelopment
    Type: AWS::IAM::Role
    Properties:
      RoleName: card-collectors-backend-pipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${SharedArtifactBucketName}"
                  - !Sub "arn:aws:s3:::${SharedArtifactBucketName}/*"
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: "*"
              - Effect: Allow
                Action:
                  - codeconnections:UseConnection
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn

  CodeBuildRole:
    Condition: IsDevelopment
    Type: AWS::IAM::Role
    Properties:
      RoleName: card-collectors-backend-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: CrossAccountECRPushAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowPushToSharedECR
                Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: arn:aws:ecr:us-east-1:782496497250:repository/collectors-card/app
        - PolicyName: EKSDeploymentAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowEKSDescribe
                Effect: Allow
                Action:
                  - eks:DescribeCluster
                  - eks:ListClusters
                Resource: "*"
              - Sid: AllowAssumeEKSRole
                Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !If
                  - HasEKSDeployRoleArn
                  - !Ref EKSDeployRoleArn
                  - !Ref "AWS::NoValue"

  #########################################
  # CODEBUILD PROJECTS
  #########################################
  BackendBuildProject:
    Condition: IsDevelopment
    Type: AWS::CodeBuild::Project
    Properties:
      Name: card-collectors-backend-build
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref Region
      Source:
        Type: CODEPIPELINE
        BuildSpec: backend/buildspec-build.yaml

  DeployBuildProject:
    Condition: IsDevelopment
    Type: AWS::CodeBuild::Project
    Properties:
      Name: card-collectors-backend-deploy
      Description: Deploy backend to EKS Fargate
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: false
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref Region
          - Name: EKS_CLUSTER_NAME
            Value: !Ref EKSClusterName
          - Name: EKS_DEPLOY_ROLE_ARN
            Value: !Ref EKSDeployRoleArn
      Source:
        Type: CODEPIPELINE
      BuildSpec: backend/buildspec-deploy.yaml

  #########################################
  # CODEPIPELINE
  #########################################
  BackendPipeline:
    Condition: IsDevelopment
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: card-collectors-backend-pipeline
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref SharedArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${RepoOwner}/${RepoName}"
                BranchName: !Ref FeatureBranch
              OutputArtifacts:
                - Name: SourceOutput

        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref BackendBuildProject

        - Name: Deploy
          Actions:
            - Name: DeployToEKS
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref DeployBuildProject
              RunOrder: 1

Outputs:
  ArtifactBucketName:
    Condition: IsShared
    Description: Name of the shared artifact bucket
    Value: !Ref SharedArtifactBucket

  PipelineName:
    Condition: IsDevelopment
    Description: Name of backend pipeline
    Value: !Ref BackendPipeline

  DeployProjectName:
    Condition: IsDevelopment
    Description: Name of deploy CodeBuild project
    Value: !Ref DeployBuildProject
