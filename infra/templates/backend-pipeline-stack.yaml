AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Reusable CloudFormation template for Card Collector project.
  Can deploy either Shared Services (artifact bucket) or Development (pipeline + build)
  based on the EnvironmentType parameter.

Parameters:
  EnvironmentType:
    Type: String
    AllowedValues:
      - Shared
      - Development
    Description: Specify whether this is a Shared or Development stack.

  SharedAccountId:
    Type: String
    Description: AWS Account ID for Shared Services (artifact bucket).

  DevAccountId:
    Type: String
    Description: AWS Account ID for Development account (pipeline + builds).

  RepoOwner:
    Type: String
    Default: lija12-3

  RepoName:
    Type: String
    Default: collectorcard

  GitHubConnectionArn:
    Type: String
    Default: ""

  SharedArtifactBucketName:
    Type: String
    Default: ""

  MainBranch:
    Type: String
    Default: main

  DevelopBranch:
    Type: String
    Default: develop

  FeatureBranch:
    Type: String
    Default: feat/CDEV-134_codepipeline

  Region:
    Type: String
    Default: us-east-1

Conditions:
  IsShared: !Equals [!Ref EnvironmentType, "Shared"]
  IsDevelopment: !Equals [!Ref EnvironmentType, "Development"]

Resources:
  #########################################
  # SHARED SERVICES RESOURCES
  #########################################
  SharedArtifactBucket:
    Condition: IsShared
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "shared-artifacts-card-collector-${Region}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SharedArtifactBucketPolicy:
    Condition: IsShared
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SharedArtifactBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowDevAccountAccess
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${DevAccountId}:root"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${SharedArtifactBucket}"
              - !Sub "arn:aws:s3:::${SharedArtifactBucket}/*"

  #########################################
  # DEVELOPMENT ACCOUNT RESOURCES
  #########################################
  PipelineRole:
    Condition: IsDevelopment
    Type: AWS::IAM::Role
    Properties:
      RoleName: card-collectors-backend-pipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CrossAccountS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${SharedArtifactBucketName}"
                  - !Sub "arn:aws:s3:::${SharedArtifactBucketName}/*"
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: "*"
        - PolicyName: AllowCodeConnectionsUsage
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codeconnections:UseConnection
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn

  CodeBuildRole:
    Condition: IsDevelopment
    Type: AWS::IAM::Role
    Properties:
      RoleName: card-collectors-backend-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser

  BackendBuildProject:
    Condition: IsDevelopment
    Type: AWS::CodeBuild::Project
    Properties:
      Name: card-collectors-backend-build
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref Region
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 20
              commands:
                - cd backend
                - npm ci
            pre_build:
              commands:
                - echo "Logging into Amazon ECR..."
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 782496497250.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
                - cd services/api
            build:
              commands:
                - echo "Building NestJS backend..."
                - npm run build
                - echo "Building Docker image..."
                - docker build -t collectorcard-backend .
                - docker tag collectorcard-backend:latest 782496497250.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/collectorcard-backend:latest
            post_build:
              commands:
                - echo "Pushing Docker image to ECR..."
                - docker push 782496497250.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/collectorcard-backend:latest
                - echo "Writing image definitions file for CodeDeploy..."
                - printf '[{"name":"collectorcard-api","imageUri":"782496497250.dkr.ecr.%s.amazonaws.com/collectorcard-backend:latest"}]' $AWS_DEFAULT_REGION > ../imagedefinitions.json

          artifacts:
            files:
              - backend/appspec.yaml
              - backend/k8s/deployment.yaml
              - backend/k8s/service.yaml
              - backend/imagedefinitions.json

  BackendPipeline:
    Condition: IsDevelopment
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: card-collectors-backend-pipeline
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref SharedArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${RepoOwner}/${RepoName}"
                BranchName: !Ref FeatureBranch
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref BackendBuildProject

Outputs:
  ArtifactBucketName:
    Condition: IsShared
    Description: Name of the shared artifact bucket
    Value: !Ref SharedArtifactBucket

  PipelineName:
    Condition: IsDevelopment
    Description: Name of backend pipeline
    Value: !Ref BackendPipeline
